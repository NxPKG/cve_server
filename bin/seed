#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path(File.join('..', '..', '/lib'), __FILE__)
require 'zlib'
require 'cve_server'
require 'cve_server/nvd/reader'
require 'cve_server/nvd/json/reader'
require 'optparse'

usage = 'Usage: seed [options]'
options = { file_ext: 'json' }
OptionParser.new do |opts|
  opts.banner = usage

  # Mandatory argument.
  opts.on("-f", "--file_extension json or xml", "Specify the file extension (json or xml) to be downloaded from NVD") do |file_ext|
    options[:file_ext] = file_ext || 'json'
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

files = File.join(CVEServer::Boot.config.raw_data_path, "*.#{options[:file_ext]}.gz")

CVEServer::Cve.drop_all
CVEServer::Cpe.drop_all
CVEServer::CpeWithVersion.drop_all

Dir.glob(files).sort.each do |infile|
  puts "Uncompressing #{infile}"
  input = Zlib::GzipReader.open(infile).read
  if options[:file_ext] == 'json'
    @doc = CVEServer::NVD::JSON::Reader.new(input)
  else
    @doc = CVEServer::NVD::Reader.new(input)
  end
  puts 'Exporting data into the CVE collection'
  CVEServer::Cve.bulk_create(@doc.all_cve)
end
puts "Reducing the cpe list"
CVEServer::Cve.reduce_cpes
puts 'Creating CVE collection Index'
CVEServer::Cve.create_index(:cve)
